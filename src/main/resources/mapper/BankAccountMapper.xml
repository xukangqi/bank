<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.dao.BankAccountMapper" >
  <resultMap id="BaseResultMap" type="com.bank.pojo.BankAccount" >
    <id column="account" property="account" jdbcType="VARCHAR" />
    <result column="cust_id" property="custId" jdbcType="VARCHAR" />
    <result column="deposit_bank" property="depositBank" jdbcType="VARCHAR" />
    <result column="balances" property="balances" jdbcType="DOUBLE" />
    <result column="blocked_balances" property="blockedBalances" jdbcType="DOUBLE" />
    <result column="open_date" property="openDate" jdbcType="VARCHAR" />
    <result column="cancel_date" property="cancelDate" jdbcType="VARCHAR" />
    <result column="account_kind" property="accountKind" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="account_status" property="accountStatus" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account, cust_id, deposit_bank, balances, blocked_balances, open_date, cancel_date, 
    account_kind, account_type, account_status, password
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bank.pojo.BankAccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bank_account
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bank_account
    where account = #{account,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.BankAccountExample" >
    delete from bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.BankAccount" >
    insert into bank_account (account, cust_id, deposit_bank, 
      balances, blocked_balances, open_date, 
      cancel_date, account_kind, account_type, 
      account_status, password)
    values (#{account,jdbcType=VARCHAR}, #{custId,jdbcType=VARCHAR}, #{depositBank,jdbcType=VARCHAR}, 
      #{balances,jdbcType=DOUBLE}, #{blockedBalances,jdbcType=DOUBLE}, #{openDate,jdbcType=VARCHAR}, 
      #{cancelDate,jdbcType=VARCHAR}, #{accountKind,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, 
      #{accountStatus,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.BankAccount" >
    insert into bank_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        account,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="depositBank != null" >
        deposit_bank,
      </if>
      <if test="balances != null" >
        balances,
      </if>
      <if test="blockedBalances != null" >
        blocked_balances,
      </if>
      <if test="openDate != null" >
        open_date,
      </if>
      <if test="cancelDate != null" >
        cancel_date,
      </if>
      <if test="accountKind != null" >
        account_kind,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="accountStatus != null" >
        account_status,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="depositBank != null" >
        #{depositBank,jdbcType=VARCHAR},
      </if>
      <if test="balances != null" >
        #{balances,jdbcType=DOUBLE},
      </if>
      <if test="blockedBalances != null" >
        #{blockedBalances,jdbcType=DOUBLE},
      </if>
      <if test="openDate != null" >
        #{openDate,jdbcType=VARCHAR},
      </if>
      <if test="cancelDate != null" >
        #{cancelDate,jdbcType=VARCHAR},
      </if>
      <if test="accountKind != null" >
        #{accountKind,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.BankAccountExample" resultType="java.lang.Integer" >
    select count(*) from bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_account
    <set >
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null" >
        cust_id = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.depositBank != null" >
        deposit_bank = #{record.depositBank,jdbcType=VARCHAR},
      </if>
      <if test="record.balances != null" >
        balances = #{record.balances,jdbcType=DOUBLE},
      </if>
      <if test="record.blockedBalances != null" >
        blocked_balances = #{record.blockedBalances,jdbcType=DOUBLE},
      </if>
      <if test="record.openDate != null" >
        open_date = #{record.openDate,jdbcType=VARCHAR},
      </if>
      <if test="record.cancelDate != null" >
        cancel_date = #{record.cancelDate,jdbcType=VARCHAR},
      </if>
      <if test="record.accountKind != null" >
        account_kind = #{record.accountKind,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null" >
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_account
    set account = #{record.account,jdbcType=VARCHAR},
      cust_id = #{record.custId,jdbcType=VARCHAR},
      deposit_bank = #{record.depositBank,jdbcType=VARCHAR},
      balances = #{record.balances,jdbcType=DOUBLE},
      blocked_balances = #{record.blockedBalances,jdbcType=DOUBLE},
      open_date = #{record.openDate,jdbcType=VARCHAR},
      cancel_date = #{record.cancelDate,jdbcType=VARCHAR},
      account_kind = #{record.accountKind,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.BankAccount" >
    update bank_account
    <set >
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=VARCHAR},
      </if>
      <if test="depositBank != null" >
        deposit_bank = #{depositBank,jdbcType=VARCHAR},
      </if>
      <if test="balances != null" >
        balances = #{balances,jdbcType=DOUBLE},
      </if>
      <if test="blockedBalances != null" >
        blocked_balances = #{blockedBalances,jdbcType=DOUBLE},
      </if>
      <if test="openDate != null" >
        open_date = #{openDate,jdbcType=VARCHAR},
      </if>
      <if test="cancelDate != null" >
        cancel_date = #{cancelDate,jdbcType=VARCHAR},
      </if>
      <if test="accountKind != null" >
        account_kind = #{accountKind,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null" >
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where account = #{account,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.BankAccount" >
    update bank_account
    set cust_id = #{custId,jdbcType=VARCHAR},
      deposit_bank = #{depositBank,jdbcType=VARCHAR},
      balances = #{balances,jdbcType=DOUBLE},
      blocked_balances = #{blockedBalances,jdbcType=DOUBLE},
      open_date = #{openDate,jdbcType=VARCHAR},
      cancel_date = #{cancelDate,jdbcType=VARCHAR},
      account_kind = #{accountKind,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where account = #{account,jdbcType=VARCHAR}
  </update>
</mapper>