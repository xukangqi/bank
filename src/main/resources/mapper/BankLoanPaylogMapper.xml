<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.dao.BankLoanPaylogMapper" >
  <resultMap id="BaseResultMap" type="com.bank.pojo.BankLoanPaylog" >
    <id column="paylog_id" property="paylogId" jdbcType="VARCHAR" />
    <result column="trans_id" property="transId" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DOUBLE" />
    <result column="pay_date" property="payDate" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    paylog_id, trans_id, pay_amount, pay_date, account
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bank.pojo.BankLoanPaylogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_loan_paylog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bank_loan_paylog
    where paylog_id = #{paylogId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bank_loan_paylog
    where paylog_id = #{paylogId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bank.pojo.BankLoanPaylogExample" >
    delete from bank_loan_paylog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bank.pojo.BankLoanPaylog" >
    insert into bank_loan_paylog (paylog_id, trans_id, pay_amount, 
      pay_date, account)
    values (#{paylogId,jdbcType=VARCHAR}, #{transId,jdbcType=VARCHAR}, #{payAmount,jdbcType=DOUBLE}, 
      #{payDate,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bank.pojo.BankLoanPaylog" >
    insert into bank_loan_paylog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paylogId != null" >
        paylog_id,
      </if>
      <if test="transId != null" >
        trans_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="account != null" >
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paylogId != null" >
        #{paylogId,jdbcType=VARCHAR},
      </if>
      <if test="transId != null" >
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bank.pojo.BankLoanPaylogExample" resultType="java.lang.Integer" >
    select count(*) from bank_loan_paylog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_loan_paylog
    <set >
      <if test="record.paylogId != null" >
        paylog_id = #{record.paylogId,jdbcType=VARCHAR},
      </if>
      <if test="record.transId != null" >
        trans_id = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_loan_paylog
    set paylog_id = #{record.paylogId,jdbcType=VARCHAR},
      trans_id = #{record.transId,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=DOUBLE},
      pay_date = #{record.payDate,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bank.pojo.BankLoanPaylog" >
    update bank_loan_paylog
    <set >
      <if test="transId != null" >
        trans_id = #{transId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
    </set>
    where paylog_id = #{paylogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bank.pojo.BankLoanPaylog" >
    update bank_loan_paylog
    set trans_id = #{transId,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DOUBLE},
      pay_date = #{payDate,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR}
    where paylog_id = #{paylogId,jdbcType=VARCHAR}
  </update>
</mapper>